digraph States {
        # dot -Tsvg constellation_linked.gv -O
        # Will create constellation_linked.gv.svg
	label = "\n\nIdentity Constellation\nTwo linked identities";
        labelloc="t";
	fontsize=20;
        inputscale=0;
        # sep=1;
        # splines=true;
        overlap=false;
        node [pos="4,5!"]; "root1";
        node [pos="1,3!"]; ne1;
        node [pos="3,3!"]; an1;
        node [pos="5,3!"]; ed1;
        node [pos="7,3!"]; cr1;
        node [pos="10,3!"]; occ1;
        node [pos="9,4!"]; rr1;

        node [pos="3.3,1.5!"]; "root2";
        node [pos="1,2!"]; ne2;
        node [pos="3,0!"]; an2;
        node [pos="1.5,1!"]; an3;
        node [pos="5,0!"]; ed2;
        node [pos="7.4,2!"]; cr2;
        node [pos="9,0!"]; occ2;
        node [pos="8,-1!"]; occ22;
        node [pos="10,1.5!"]; rr2;

        "ne1","ne2" [label="alt name"];
        "an1", "an2", "an3" [label="alt name"];
        "ed1", "ed2" [label="exist dates"];
        "occ1", "occ2", "occ22" [label="occupation/function"];
        "cr1", "cr2" [label="cpf relation"];
        "rr1", "rr2" [label="resource relation"];
        "root1" [label="identity-A"];
        "root2" [label="identity-B"];

        root1 -> ne1;
        root1 -> an1;
        root1 -> ed1;
        root1 -> occ1;
        root1 -> cr1;
        root1-> rr1;

        cr1 -> cr2 ;
        cr2 -> cr1 ;

        root2-> rr2;
        cr2 -> root2  [dir="back"];
        root2 -> occ2;
        root2 -> occ22;
        root2 -> ed2;
        root2 -> an2;
        root2 -> an3;
        root2 -> ne2;


}
